{"version":3,"sources":["services/ratings.js","components/Book.js","components/Notification.js","components/LoginForm.js","components/BookForm.js","components/Togglable.js","components/Footer.js","services/books.js","services/login.js","App.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","Book","book","toggleImportance","handle","rate","label","important","className","name","author","year","rating","numRatings","onClick","onSubmit","ratingsService","BookId","value","onChange","type","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","BookForm","createBook","useState","newBook","setNewBook","event","preventDefault","content","Math","random","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","Footer","color","fontStyle","fontSize","login","credentials","App","books","setBooks","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","setRate","bookFormRef","useRef","useEffect","bookService","initialBooks","loggedUserJSON","window","localStorage","getItem","JSON","parse","ratingService","addBook","bookObject","current","returnedBook","concat","handleLogin","loginService","setItem","stringify","setTimeout","handleRateChange","map","find","n","changedBook","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a7b69ce.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/ratings'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import React from 'react'\nimport ratingsService from '../services/ratings'\n\nconst Book = ({ book, toggleImportance, handle, rate }) => {\n  const label = book.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className='book'>\n      <p> Title: {book.name} </p>\n      <p> Author: {book.author} </p>\n      <p> Year of publishing: {book.year} </p>\n      <p> Rating: {book.rating} </p>\n      <p> Number ratings: {book.numRatings}  </p>\n      <p>\n        <button onClick={toggleImportance}>{label}</button>\n      </p>\n\n      <p>\n        <form onSubmit={() => {\n          ratingsService.create({ BookId: book.id, rating: rate })\n        }}>\n          <label>\n            Rate the book:\n            <select value={book.rating} onChange={handle}>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n              <option value={5}>5</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </p>\n    </li>\n  )\n}\n\nexport default Book","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BookForm = ({ createBook }) => {\n  const [newBook, setNewBook] = useState('')\n\n  const handleChange = (event) => {\n    setNewBook(event.target.value)\n  }\n\n  const addBook = (event) => {\n    event.preventDefault()\n    createBook({\n      content: newBook,\n      important: Math.random() > 0.5,\n    })\n\n    setNewBook('')\n  }\n\n  return (\n    <div>\n      <h2>Add a book</h2>\n\n      <form onSubmit={addBook}>\n        <input\n          value={newBook}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BookForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Bookers</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/books'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Book from './components/Book'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BookForm from './components/BookForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport bookService from './services/books'\nimport loginService from './services/login'\nimport ratingService from './services/ratings'\n\nconst App = () => {\n  const [books, setBooks] = useState([])\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState({ 'user': null, 'token': null })\n  const [rate, setRate] = useState(0)\n\n  const bookFormRef = useRef()\n\n  useEffect(() => {\n    bookService\n      .getAll()\n      .then(initialBooks => {\n        setBooks(initialBooks)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBookappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      ratingService.setToken(user.token)\n    }\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const book = books.find(n => n.id === id)\n    const changedBook = { ...book, important: !book.important }\n\n    bookService\n      .update(id, changedBook)\n      .then(returnedBook => {\n        setBooks(books.map(book => book.id !== id ? book : returnedBook))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Book '${book.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const addBook = (bookObject) => {\n    bookFormRef.current.toggleVisibility()\n    bookService\n      .create(bookObject)\n      .then(returnedBook => {\n        setBooks(books.concat(returnedBook))\n      })\n  }\n\n  /*const booksToShow = showAll\n    ? books\n    : books.filter(book => book.important)*/\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      ratingService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedBookappUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleRateChange = (event) => {\n    event.preventDefault()\n    setRate(event.target.value)\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const bookForm = () => (\n    <Togglable buttonLabel=\"new book\" ref={bookFormRef}>\n      <BookForm createBook={addBook} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Books</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>Username : {user.name} </p>\n          {bookForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n\n      <ul>\n        {books.map(book =>\n          <Book\n            key={book.id}\n            book={book}\n            toggleImportance={() => toggleImportanceOf(book.id)}\n            handle = {handleRateChange}\n            rate={rate}\n          />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n// eslint-disable-next-line react/react-in-jsx-scope\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}