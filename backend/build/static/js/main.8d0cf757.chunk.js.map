{"version":3,"sources":["services/ratings.js","components/Book.js","components/Notification.js","components/LoginForm.js","components/BookForm.js","components/Togglable.js","components/Footer.js","components/Logout.js","services/books.js","services/login.js","App.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","console","log","error","update","id","put","setToken","newToken","Book","book","toggleImportance","logout","setErrorMessage","useState","rate","setRate","label","important","className","name","author","year","rating","toFixed","numRatings","onClick","onSubmit","event","preventDefault","ratingsService","BookId","setTimeout","value","onChange","target","type","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","BookForm","createBook","newBook","setNewBook","content","Math","random","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","Footer","color","fontStyle","fontSize","Logout","handleLogout","login","credentials","validToken","App","books","setBooks","showAll","setShowAll","errorMessage","setUsername","setPassword","user","setUser","bookFormRef","useRef","useEffect","bookService","initialBooks","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","ratingService","addBook","bookObject","current","returnedBook","concat","handleLogin","setItem","stringify","removeItem","map","find","n","changedBook","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d0cf757.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/ratings'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  try{\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }catch(error){\n    console.log(error.response.data.error)\n    return(error.response.data.error)\n  }\n\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import React, { useState } from 'react'\nimport ratingsService from '../services/ratings'\n\nconst Book = ({ book, toggleImportance , logout, setErrorMessage }) => {\n\n  const [rate, setRate] = useState(1)\n\n  const label = book.important\n    ? 'make not important' : 'make important'\n\n  const handleRateChange = (event) => {\n    setRate(event.target.value)\n  }\n\n  return (\n    <li className='book'>\n      <p> Title: {book.name} </p>\n      <p> Author: {book.author} </p>\n      <p> Year of publishing: {book.year} </p>\n      <p> Rating: {book.rating.toFixed(1)} </p>\n      <p> Number ratings: {book.numRatings}  </p>\n      <p>\n        <button onClick={toggleImportance}>{label}</button>\n      </p>\n\n      <p>\n        <form onSubmit={ async (event) => {\n          event.preventDefault()\n          setRate(1)\n          const response = await ratingsService.create({ BookId: book.id, rating: rate })\n          console.log(response)\n          if(response === 'token expired'){\n            setErrorMessage('Session expired')\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            logout()\n          }\n\n        }}>\n          <label>\n            Rate the book:\n            <select value={rate} onChange={handleRateChange}>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n              <option value={5}>5</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </p>\n    </li>\n  )\n}\n\nexport default Book","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BookForm = ({ createBook }) => {\n  const [newBook, setNewBook] = useState('')\n\n  const handleChange = (event) => {\n    setNewBook(event.target.value)\n  }\n\n  const addBook = (event) => {\n    event.preventDefault()\n    createBook({\n      content: newBook,\n      important: Math.random() > 0.5,\n    })\n\n    setNewBook('')\n  }\n\n  return (\n    <div>\n      <h2>Add a book</h2>\n\n      <form onSubmit={addBook}>\n        <input\n          value={newBook}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BookForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Alejandro Rabo y Carmen Diez :)</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst Logout = ({ handleLogout }) => {\n  return(\n    <div>\n      <button onClick={() => handleLogout()}>\n        logout\n      </button>\n    </div>\n  )\n}\n\nexport default Logout","import axios from 'axios'\nconst baseUrl = '/api/books'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getBook = (id) => {\n  const reqString = `${baseUrl}/${id}`\n  const request = axios.get(reqString)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst validToken = async (token) => {\n  try {\n    const response = await axios.post(`${baseUrl}/validToken`, { 'token': token })\n    return response.data.validToken\n  } catch(error) {\n    return(false)\n  }\n}\n\nexport default { login, validToken }","import React, { useState, useEffect, useRef } from 'react'\nimport Book from './components/Book'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BookForm from './components/BookForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport Logout from './components/Logout'\nimport bookService from './services/books'\nimport loginService from './services/login'\nimport ratingService from './services/ratings'\n\nconst App = () => {\n  const [books, setBooks] = useState([])\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const bookFormRef = useRef()\n\n  useEffect(() => {\n    bookService\n      .getAll()\n      .then(initialBooks => {\n        setBooks(initialBooks)\n      })\n  }, [])\n\n  useEffect(async () => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBookappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      if (await loginService.validToken(user.token)) {\n        setUser(user)\n        ratingService.setToken(user.token)\n      } else {\n        setUser(null)\n        ratingService.setToken(null)\n      }\n    }\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const book = books.find(n => n.id === id)\n    const changedBook = { ...book, important: !book.important }\n\n    bookService\n      .update(id, changedBook)\n      .then(returnedBook => {\n        setBooks(books.map(book => book.id !== id ? book : returnedBook))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Book '${book.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const addBook = (bookObject) => {\n    bookFormRef.current.toggleVisibility()\n    bookService\n      .create(bookObject)\n      .then(returnedBook => {\n        setBooks(books.concat(returnedBook))\n      })\n  }\n\n  /*const booksToShow = showAll\n    ? books\n    : books.filter(book => book.important)*/\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      ratingService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedBookappUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      console.log(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      console.log(user)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    ratingService.setToken(null)\n    window.localStorage.removeItem('loggedBookappUser')\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const bookForm = () => (\n    <Togglable buttonLabel=\"new book\" ref={bookFormRef}>\n      <BookForm createBook={addBook} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Bookers</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>Username : {user.name} </p>\n          <Logout handleLogout={handleLogout} />\n          {bookForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n\n      <ul>\n        {books.map(book =>\n          <Book\n            key={book.id}\n            book={book}\n            toggleImportance={() => toggleImportanceOf(book.id)}\n            logout={handleLogout}\n            setErrorMessage={setErrorMessage}\n          />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n// eslint-disable-next-line react/react-in-jsx-scope\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}