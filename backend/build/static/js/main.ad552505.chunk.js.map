{"version":3,"sources":["services/ratings.js","services/books.js","components/Book.js","components/Notification.js","components/LoginForm.js","components/BookForm.js","components/Togglable.js","components/Footer.js","components/Logout.js","services/login.js","App.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","error","update","id","put","setToken","newToken","getBook","reqString","console","log","Book","book","toggleImportance","logout","setErrorMessage","setBooks","books","useState","rate","setRate","label","important","onSubmitRate","event","preventDefault","ratingsService","BookId","rating","setTimeout","className","name","author","year","toFixed","numRatings","onClick","onSubmit","value","onChange","target","type","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","BookForm","createBook","newBook","setNewBook","content","Math","random","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","Footer","color","fontStyle","fontSize","Logout","handleLogout","login","credentials","validToken","App","showAll","setShowAll","errorMessage","setUsername","setPassword","user","setUser","bookFormRef","useRef","useEffect","bookService","initialBooks","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","ratingService","addBook","bookObject","current","returnedBook","concat","handleLogin","setItem","stringify","removeItem","map","find","n","changedBook","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad552505.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/ratings'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  try {\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  } catch(error) {\n    return(error.response.data.error)\n  }\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }","import axios from 'axios'\nconst baseUrl = '/api/books'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getBook = async (id) => {\n  const reqString = `${baseUrl}/${id}`\n  const response = await axios.get(reqString)\n  console.log(response.data)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, getBook, create, update }\n","import React, { useState } from 'react'\nimport ratingsService from '../services/ratings'\nimport booksService from '../services/books'\n\n\nconst Book = ({ book, toggleImportance , logout, setErrorMessage, setBooks, books }) => {\n\n  const [rate, setRate] = useState(1)\n\n  const label = book.important\n    ? 'make not important' : 'make important'\n\n  const handleRateChange = (event) => {\n    setRate(event.target.value)\n  }\n\n  const onSubmitRate = async (event) => {\n    event.preventDefault()\n    setRate(1)\n    const response = await ratingsService.create({ BookId: book.id, rating: rate })\n    console.log(response)\n    if(response === 'token expired'){\n      setErrorMessage('Session expired')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      logout()\n    } else {\n      /*\n      const bookDB = booksService.getBook(book.id)\n      const booksCopy = books.map(b => { return b.id === book.id ? bookDB : b })\n      setBooks(booksCopy)*/\n    }\n  }\n\n  return (\n    <li className='book'>\n      <p> Title: {book.name} </p>\n      <p> Author: {book.author} </p>\n      <p> Year of publishing: {book.year} </p>\n      <p> Rating: {book.rating.toFixed(1)} </p>\n      <p> Number ratings: {book.numRatings}  </p>\n      <p>\n        <button onClick={toggleImportance}>{label}</button>\n      </p>\n\n      <p>\n        <form onSubmit={ onSubmitRate }>\n          <label>\n            Rate the book:\n            <select value={rate} onChange={handleRateChange}>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n              <option value={5}>5</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </p>\n    </li>\n  )\n}\n\nexport default Book","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst BookForm = ({ createBook }) => {\n  const [newBook, setNewBook] = useState('')\n\n  const handleChange = (event) => {\n    setNewBook(event.target.value)\n  }\n\n  const addBook = (event) => {\n    event.preventDefault()\n    createBook({\n      content: newBook,\n      important: Math.random() > 0.5,\n    })\n\n    setNewBook('')\n  }\n\n  return (\n    <div>\n      <h2>Add a book</h2>\n\n      <form onSubmit={addBook}>\n        <input\n          value={newBook}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BookForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Alejandro Rabo y Carmen Diez :)</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst Logout = ({ handleLogout }) => {\n  return(\n    <div>\n      <button onClick={() => handleLogout()}>\n        logout\n      </button>\n    </div>\n  )\n}\n\nexport default Logout","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst validToken = async (token) => {\n  try {\n    const response = await axios.post(`${baseUrl}/validToken`, { 'token': token })\n    return response.data.validToken\n  } catch(error) {\n    return(false)\n  }\n}\n\nexport default { login, validToken }","import React, { useState, useEffect, useRef } from 'react'\nimport Book from './components/Book'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BookForm from './components/BookForm'\nimport Togglable from './components/Togglable'\nimport Footer from './components/Footer'\nimport Logout from './components/Logout'\nimport bookService from './services/books'\nimport loginService from './services/login'\nimport ratingService from './services/ratings'\n\nconst App = () => {\n  const [books, setBooks] = useState([])\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const bookFormRef = useRef()\n\n  useEffect(() => {\n    bookService\n      .getAll()\n      .then(initialBooks => {\n        setBooks(initialBooks)\n      })\n  }, [])\n\n  useEffect(async () => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBookappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      if (await loginService.validToken(user.token)) {\n        setUser(user)\n        ratingService.setToken(user.token)\n      } else {\n        setUser(null)\n        ratingService.setToken(null)\n      }\n    }\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const book = books.find(n => n.id === id)\n    const changedBook = { ...book, important: !book.important }\n\n    bookService\n      .update(id, changedBook)\n      .then(returnedBook => {\n        setBooks(books.map(book => book.id !== id ? book : returnedBook))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Book '${book.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const addBook = (bookObject) => {\n    bookFormRef.current.toggleVisibility()\n    bookService\n      .create(bookObject)\n      .then(returnedBook => {\n        setBooks(books.concat(returnedBook))\n      })\n  }\n\n  /*const booksToShow = showAll\n    ? books\n    : books.filter(book => book.important)*/\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      ratingService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedBookappUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      console.log(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      console.log(user)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    ratingService.setToken(null)\n    window.localStorage.removeItem('loggedBookappUser')\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const bookForm = () => (\n    <Togglable buttonLabel=\"new book\" ref={bookFormRef}>\n      <BookForm createBook={addBook} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h1>Bookers</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>Username : {user.name} </p>\n          <Logout handleLogout={handleLogout} />\n          {bookForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n\n      <ul>\n        {books.map(book =>\n          <Book\n            key={book.id}\n            book={book}\n            toggleImportance={() => toggleImportanceOf(book.id)}\n            logout={handleLogout}\n            setErrorMessage={setErrorMessage}\n            setBooks={setBooks}\n            books={books}\n          />\n        )}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n// eslint-disable-next-line react/react-in-jsx-scope\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}